package com.prykhodko.shoppinglistSB.model;


import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Getter;
import lombok.Setter;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import javax.persistence.*;
import javax.validation.constraints.NotBlank;
import java.io.Serializable;
import java.util.Date;

@Entity //used to mark the class as a persistent Java class
@Table(name = "list") //used to provide the details of the table that this entity will be mapped to
@EntityListeners(AuditingEntityListener.class)
@JsonIgnoreProperties(value = {"createdAt", "updatedAt"},
        allowGetters = true) //is a Jackson annotation.
// Spring Boot uses Jackson for Serializing and Deserializing Java objects to and from JSON

@Getter
@Setter
public class List implements Serializable {

    @Id //annotation is used to define the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) //used to define the primary key generation strategy
    private Long id;

    @NotBlank //used to validate that the annotated field is not null or empty
    private String item;

    @NotBlank
    private String details;

    @NotBlank
    private String amount;

    @NotBlank
    private String price;

    @Column(nullable = false, updatable = false) //used to define the properties of the column that will be mapped to the annotated field
    @Temporal(TemporalType.TIMESTAMP) //used with java.util.Date and java.util.Calendar classes.
    // It converts the date and time values from Java Object to compatible database type and vice versa

    @CreatedDate
    private Date createdAt;

    @Column(nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    @LastModifiedDate
    private Date updatedAt;

    // Getters and Setters generated by Lombok
}
